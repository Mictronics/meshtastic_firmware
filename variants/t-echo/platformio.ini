[platformio]
default_envs = t-echo

[env:t-echo]
extends = nrf52840_base
board = t-echo
upload_protocol = jlink
# debug settings for external openocd
debug_tool = custom
debug_init_break = tbreak main
debug_init_cmds =
  target extended-remote localhost:3333
  $INIT_BREAK
  monitor reset halt
  $LOAD_CMDS
  monitor init
  monitor reset halt

# add -DCFG_SYSVIEW if you want to use the Segger systemview tool for OS profiling.
# Start openocd int terminal: openocd -c 'interface jlink; transport select swd; source [find target/nrf52.cfg]' -c 'init'
build_flags = ${nrf52840_base.build_flags} -Ivariants/t-echo
  -DGPS_POWER_TOGGLE
  -L "${platformio.libdeps_dir}/${this.__env__}/bsec2/src/cortex-m4/fpv4-sp-d16-hard"
  -DEINK_DISPLAY_MODEL=GxEPD2_154_D67
  -DEINK_WIDTH=200
  -DEINK_HEIGHT=200
  -DUSE_EINK_DYNAMICDISPLAY            ; Enable Dynamic EInk
  -DEINK_LIMIT_FASTREFRESH=20          ; How many consecutive fast-refreshes are permitted
  -DEINK_BACKGROUND_USES_FAST          ; (Optional) Use FAST refresh for both BACKGROUND and RESPONSIVE, until a limit is reached.
  -g

build_src_filter = ${nrf52_base.build_src_filter} +<../variants/t-echo>
lib_deps = 
  ${nrf52840_base.lib_deps}
  https://github.com/meshtastic/GxEPD2#55f618961db45a23eff0233546430f1e5a80f63a
  lewisxhe/PCF8563_Library@^1.0.1
;upload_protocol = fs